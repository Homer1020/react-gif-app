{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE5B,EAAsCC,mBAAS,IAA/C,mBAAQC,EAAR,KAAoBC,EAApB,KAgBA,OACC,sBAAMC,SAXc,SAAAC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMf,SACC,uBACCO,KAAK,OACLC,MAAQT,EACRU,SAnBuB,SAAAP,GACzBF,EAAcE,EAAEQ,OAAOF,a,QCRZG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACnC,OACC,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCJIK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEhBN,EAFgB,iDAEiCO,UAAUF,GAF3C,+DAGHG,MAAOR,GAHJ,cAGhBS,EAHgB,gBAICA,EAAKC,OAJN,uBAIdC,EAJc,EAIdA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACNC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVd,kBAcfY,GAde,4CAAH,sDCGPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAEzB,ECF2B,SAAEA,GAC7B,MAA0BpB,mBAAS,CAClC0B,KAAM,GACNQ,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WAETlB,EAAQC,GACNkB,MAAK,SAAAC,GACLH,EAAS,CACRV,KAAMa,EACNL,SAAS,SAIV,CAAEd,IAEEe,EDhB0BK,CAAapB,GAAjCW,EAAb,EAAQL,KAAaQ,EAArB,EAAqBA,QAErB,OACC,qCACC,oBAAIlB,UAAU,oCAAd,SAAoDI,IAElDc,GAAW,mBAAGlB,UAAU,mCAAb,yBAEb,qBAAKA,UAAU,YAAf,SAEEe,EAAOH,KAAI,SAAAC,GAAG,OACb,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEbJW,EAAe,WAG3B,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAOA,OACC,qCACC,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BACG2C,EAAWd,KAAI,SAAAR,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAWA,GAArBA,Y,MChB/CuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e9e3478c.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n\tconst [ inputValue, setInputValue ] = useState('');\r\n\r\n\tconst handleInputChange = e => {\r\n\t\tsetInputValue(e.target.value);\r\n\t}\r\n\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif(inputValue.trim().length > 2) {\r\n\t\t\tsetCategories(cats => [inputValue, ...cats]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={ handleSubmit }>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={ inputValue }\r\n\t\t\t\tonChange={ handleInputChange }\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired\r\n}","export const GifGridItem = ({title, url}) => {\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__fadeIn\">\r\n\t\t\t <img src={ url } alt={ title } />\r\n\t\t\t <p>{ title }</p>\r\n\t\t</div>\r\n\t);\r\n}","export const getGifs = async category => {\r\n\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=ywjhfvPM7LpcdqmsKt1r4yt7A9IXCCAa`;\r\n\tconst resp = await fetch( url );\r\n\tconst { data } = await resp.json();\r\n\r\n\tconst gifs = data.map(img => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url\r\n\t\t}\r\n\t});\r\n\r\n\treturn gifs;\r\n}","import { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\tconst { data:images, loading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n\t\t\t{ loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\r\n\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{\r\n\t\t\t\t\timages.map(img => (\r\n\t\t\t\t\t\t<GifGridItem\r\n\t\t\t\t\t\t\tkey={ img.id }\r\n\t\t\t\t\t\t\t{ ...img }\r\n\t\t\t\t\t\t\t />)\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tgetGifs(category)\r\n\t\t\t.then(imgs => {\r\n\t\t\t\tsetState({\r\n\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t}, [ category ]);\r\n\r\n\treturn state; // { data: [], loading: true }\r\n}","import { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\t\r\n\t// const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\tconst [categories, setCategories] = useState(['One Punch']);\r\n\r\n\t// const handleAdd = () => {\r\n\t// \t// setCategories(['Spider man', ...categories]);\r\n\t// \tsetCategories(cats => [...cats, 'Spider man']);\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Gif Expert App</h2>\r\n\t\t\t<AddCategory setCategories={ setCategories } />\r\n\t\t\t<hr />\r\n\r\n\t\t\t<ol>\r\n\t\t\t\t{ categories.map(category => <GifGrid key={category} category={ category } />) }\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}